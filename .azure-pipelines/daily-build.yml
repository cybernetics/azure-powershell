# Please don't use ADO UI defined scheduled triggers because it takes precedence over YAML scheduled triggers.
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/scheduled-triggers
schedules:
- cron: "0 0 * * *"
  displayName: Daily Midnight Build
  branches:
    include:
    - internal/dailyBuild

pr: none

stages:
- stage: VersionBump
  jobs:
  - job: VersionBump
    pool:
      vmImage: 'Hosted VS2017'
    steps:
    # - task: PowerShell@2
    #   displayName: Initialization
    #   inputs:
    #     targetType: 'inline'
    #     script: |
    #       # Avoid issue of filename too long
    #       git config --global core.longpaths true
          
    #       # Wipe any changes from a previous branch
    #       git clean -xdf
          
    #       # Ensure the installation policy of PSGallery is Trusted
    #       Set-PSRepository -Name PSGallery -InstallationPolicy Trusted

    #       # Sync with master
    #       git config user.email "bez@microsoft.com"
    #       git config user.name "azuresdkci"
    #       git remote set-url origin https://$(Token)@github.com/Azure/azure-powershell.git
    #       git checkout -b internal/dailyBuild

    # - task: DotNetCoreCLI@2
    #   displayName: 'Build Products'
    #   inputs:
    #     command: custom
    #     custom: msbuild
    #     arguments: 'build.proj /t:Build /p:Configuration=Release'

    # - task: PowerShell@2
    #   displayName: VersionBump
    #   inputs:
    #     targetType: filePath
    #     filePath: ./tools/RunVersionController.ps1
    #     arguments: '-Release "$(MonthName) $(Year)"'
    #     pwsh: true

    # - task: PowerShell@2
    #   displayName: Commit Change 
    #   inputs:
    #     targetType: 'inline'
    #     script: |
    #       git add .
    #       git commit -m "bump version"
    #       git status
    #       git push origin internal/dailyBuild --force

    - task: PowerShell@2
      displayName: 'Install platyPS'
      inputs:
        targetType: inline
        script: 'Install-Module platyPS -Force -Confirm:$false -Scope CurrentUser'
        pwsh: true

    - task: PowerShell@2
      displayName: 'Install PowerShellGet [v2.1.3 has a Publish-Module bug]'
      inputs:
        targetType: inline
        script: 'Install-Module PowerShellGet -Force -Confirm:$false -Scope CurrentUser -SkipPublisherCheck'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: custom
        custom: msbuild
        arguments: 'build.proj /t:Build;GenerateHelp;StaticAnalysis /p:Configuration=Release'

    - task: PowerShell@2
      displayName: 'Before Signing'
      inputs:
        targetType: 'inline'
        script: |
          # Delete PowerShell Runtime Files
          Get-ChildItem -Path $Env:RepoArtifacts/$Env:Configuration -Recurse -Include 'runtimes' | Remove-Item -Recurse -Force

          # Copy ShortCut to be Signed
          Copy-Item .\tools\Az\Az.psm1 -Destination $Env:RepoArtifacts/$Env:Configuration
        pwsh: true
        
    - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
      displayName: 'Dll Signing [Authenticode + Strong Name]'
      inputs:
        ConnectedServiceName: 'ESRP Signing Service'
        FolderPath: artifacts
        Pattern: |
          Release/**/Microsoft*Azure*PowerShell*Cmdlets*.dll
          Release/**/Az.*.private.dll
          Release/**/Microsoft.Azure.PowerShell.Authentication.dll
          Release/**/Microsoft.Azure.PowerShell.Authentication.ResourceManager.dll
          Release/**/Microsoft.Azure.PowerShell.Authenticators.dll
          !Release/**/Microsoft*Azure*PowerShell*Cmdlets*.Test.dll
        UseMinimatch: true
        signConfigType: inlineSignParams
        inlineOperation: |
          [
            {
              "KeyCode": "CP-233863-SN",
              "OperationCode": "StrongNameSign",
              "Parameters": {},
              "ToolName": "sign",
              "ToolVersion": "1.0"
            },
            {
              "KeyCode": "CP-233863-SN",
              "OperationCode": "StrongNameVerify",
              "Parameters": {},
              "ToolName": "sign",
              "ToolVersion": "1.0"
            },
            {
              "KeyCode": "CP-230012",
              "OperationCode": "SigntoolSign",
              "Parameters": {
                "OpusName": "Microsoft",
                "OpusInfo": "http://www.microsoft.com",
                "FileDigest": "/fd \"SHA256\"",
                "PageHash": "/NPH",
                "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
              },
              "ToolName": "sign",
              "ToolVersion": "1.0"
            },
            {
              "KeyCode": "CP-230012",
              "OperationCode": "SigntoolVerify",
              "Parameters": {},
              "ToolName": "sign",
              "ToolVersion": "1.0"
            }
          ]


    # - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
    #   displayName: 'Scripts Signing [Authenticode]'
    #   inputs:
    #     ConnectedServiceName: 'azps-sign'
    #     FolderPath: artifacts
    #     Pattern: |
    #       Release/**/*.ps1
    #       Release/**/*.psm1
    #       Release/**/*.ps1xml
    #       Release/**/*.js
    #     UseMinimatch: true
    #     signConfigType: inlineSignParams
    #     inlineOperation: |
    #       [
    #         {
    #           "KeyCode": "CP-230012",
    #           "OperationCode": "SigntoolSign",
    #           "Parameters": {
    #             "OpusName": "Microsoft",
    #             "OpusInfo": "http://www.microsoft.com",
    #             "FileDigest": "/fd \"SHA256\"",
    #             "PageHash": "/NPH",
    #             "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
    #           },
    #           "ToolName": "sign",
    #           "ToolVersion": "1.0"
    #         },
    #         {
    #           "KeyCode": "CP-230012",
    #           "OperationCode": "SigntoolVerify",
    #           "Parameters": {},
    #           "ToolName": "sign",
    #           "ToolVersion": "1.0"
    #         }
    #       ]
    
    # - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
    #   displayName: '3rd Party Signing [Authenticode]'
    #   inputs:
    #     ConnectedServiceName: 'azps-sign'
    #     FolderPath: artifacts
    #     Pattern: |
    #       Release/**/*AutoMapper*.dll
    #       Release/**/*YamlDotNet*.dll
    #       Release/**/*Newtonsoft.Json*.dll
    #       Release/**/*BouncyCastle.Crypto*.dll
    #     UseMinimatch: true
    #     signConfigType: inlineSignParams
    #     inlineOperation: |
    #       [
    #         {
    #           "KeyCode": "CP-231522",
    #           "OperationCode": "SigntoolSign",
    #           "Parameters": {
    #             "OpusName": "Microsoft",
    #             "OpusInfo": "http://www.microsoft.com",
    #             "FileDigest": "/fd \"SHA256\"",
    #             "PageHash": "/NPH",
    #             "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
    #           },
    #           "ToolName": "sign",
    #           "ToolVersion": "1.0"
    #         },
    #         {
    #           "KeyCode": "CP-231522",
    #           "OperationCode": "SigntoolVerify",
    #           "Parameters": {},
    #           "ToolName": "sign",
    #           "ToolVersion": "1.0"
    #         }
    #       ]

    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: custom
        custom: msbuild
        arguments: 'build.proj /t:Publish /p:Configuration=Release;NuGetKey=$(NuGetKey)'

    - task: PublishPipelineArtifact@0
      displayName: 'Save artifacts'
      inputs:
        artifactName: artifacts
        targetPath: artifacts
      condition: succeededOrFailed()      